// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Option$Rationale = require("rationale/src/Option.js");
var Fetcher$Fetcheroo = require("fetcheroo/src/Fetcher.bs.js");
var Creds$ReactHooksTemplate = require("./Creds.bs.js");

function fromJson(raw) {
  return /* record */[/* error */Json_decode.field("Error", Json_decode.string, raw)];
}

var $$Error = /* module */[/* fromJson */fromJson];

function fromJson$1(raw) {
  return /* record */[/* title */Json_decode.field("Title", Json_decode.string, raw)];
}

var Movie = /* module */[/* fromJson */fromJson$1];

function fromJson$2(raw) {
  return /* record */[/* foo */Json_decode.field("title", Json_decode.$$int, raw)];
}

var Entity = /* module */[/* fromJson */fromJson$2];

var Resources = /* module */[
  /* Error */$$Error,
  /* Movie */Movie,
  /* Entity */Entity
];

function authenticatedFetcher(param) {
  var arg = /* Json */Block.__(1, [fromJson]);
  var arg$1 = Caml_option.some("http://www.omdbapi.com/?apikey=" + Creds$ReactHooksTemplate.apiKey);
  var arg$2 = function (param) {
    return $$Array.of_list(/* [] */0);
  };
  return (function (param) {
      var func = function (param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8) {
        return Fetcher$Fetcheroo.make(param, param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8);
      };
      return (function (param) {
          var func$1 = Curry._2(func, param, arg);
          return (function (param, param$1) {
              var func$2 = Curry._2(func$1, param, param$1);
              return (function (param) {
                  return Curry._3(func$2, param, arg$1, arg$2);
                });
            });
        });
    });
}

var func = authenticatedFetcher(/* () */0);

var arg = /* Json */Block.__(1, [(function (js) {
        var __x = Js_json.decodeObject(js);
        var __x$1 = Option$Rationale.map((function (o) {
                return List.exists((function (a) {
                              return a === "Error";
                            }), $$Array.to_list(Object.keys(o)));
              }), __x);
        var isError = Option$Rationale.$$default(false, __x$1);
        if (isError) {
          return /* Error */Block.__(1, [fromJson(js)]);
        } else {
          return /* Ok */Block.__(0, [fromJson$1(js)]);
        }
      })]);

function movieFetcher(param) {
  return Curry._2(func, param, arg);
}

function searchByName(name, subscribe) {
  return Curry._4(movieFetcher("&t=" + name), undefined, subscribe, undefined, /* () */0);
}

function searchById(id, subscribe) {
  return Curry._4(movieFetcher("&i=" + id), undefined, subscribe, undefined, /* () */0);
}

function fakeEndpoint(name, subscribe) {
  return Curry._5(authenticatedFetcher(/* () */0)("/" + name), /* Json */Block.__(1, [fromJson$2]), undefined, subscribe, undefined, /* () */0);
}

exports.Resources = Resources;
exports.authenticatedFetcher = authenticatedFetcher;
exports.movieFetcher = movieFetcher;
exports.searchByName = searchByName;
exports.searchById = searchById;
exports.fakeEndpoint = fakeEndpoint;
/* func Not a pure module */
